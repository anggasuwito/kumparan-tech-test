// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/repository/article.go

// Package mockrepository is a generated GoMock package.
package mockrepository

import (
	context "context"
	entity "kumparan-tech-test/internal/domain/entity"
	model "kumparan-tech-test/internal/domain/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockArticleRepo is a mock of ArticleRepo interface.
type MockArticleRepo struct {
	ctrl     *gomock.Controller
	recorder *MockArticleRepoMockRecorder
}

// MockArticleRepoMockRecorder is the mock recorder for MockArticleRepo.
type MockArticleRepoMockRecorder struct {
	mock *MockArticleRepo
}

// NewMockArticleRepo creates a new mock instance.
func NewMockArticleRepo(ctrl *gomock.Controller) *MockArticleRepo {
	mock := &MockArticleRepo{ctrl: ctrl}
	mock.recorder = &MockArticleRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleRepo) EXPECT() *MockArticleRepoMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method.
func (m *MockArticleRepo) CreateArticle(ctx context.Context, req *model.Article) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateArticle indicates an expected call of CreateArticle.
func (mr *MockArticleRepoMockRecorder) CreateArticle(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockArticleRepo)(nil).CreateArticle), ctx, req)
}

// GetListArticle mocks base method.
func (m *MockArticleRepo) GetListArticle(ctx context.Context, req *entity.GetListArticleRequest) ([]*model.Article, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListArticle", ctx, req)
	ret0, _ := ret[0].([]*model.Article)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetListArticle indicates an expected call of GetListArticle.
func (mr *MockArticleRepoMockRecorder) GetListArticle(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListArticle", reflect.TypeOf((*MockArticleRepo)(nil).GetListArticle), ctx, req)
}
