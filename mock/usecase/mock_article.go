// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/article.go

// Package mockusecase is a generated GoMock package.
package mockusecase

import (
	context "context"
	entity "kumparan-tech-test/internal/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockArticleUC is a mock of ArticleUC interface.
type MockArticleUC struct {
	ctrl     *gomock.Controller
	recorder *MockArticleUCMockRecorder
}

// MockArticleUCMockRecorder is the mock recorder for MockArticleUC.
type MockArticleUCMockRecorder struct {
	mock *MockArticleUC
}

// NewMockArticleUC creates a new mock instance.
func NewMockArticleUC(ctrl *gomock.Controller) *MockArticleUC {
	mock := &MockArticleUC{ctrl: ctrl}
	mock.recorder = &MockArticleUCMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockArticleUC) EXPECT() *MockArticleUCMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method.
func (m *MockArticleUC) CreateArticle(ctx context.Context, req *entity.CreateArticleRequest) (*entity.CreateArticleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", ctx, req)
	ret0, _ := ret[0].(*entity.CreateArticleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArticle indicates an expected call of CreateArticle.
func (mr *MockArticleUCMockRecorder) CreateArticle(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockArticleUC)(nil).CreateArticle), ctx, req)
}

// GetListArticle mocks base method.
func (m *MockArticleUC) GetListArticle(ctx context.Context, req *entity.GetListArticleRequest) (*entity.GetListArticleResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListArticle", ctx, req)
	ret0, _ := ret[0].(*entity.GetListArticleResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListArticle indicates an expected call of GetListArticle.
func (mr *MockArticleUCMockRecorder) GetListArticle(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListArticle", reflect.TypeOf((*MockArticleUC)(nil).GetListArticle), ctx, req)
}
